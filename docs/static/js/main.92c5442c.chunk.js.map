{"version":3,"sources":["types/types.js","reducers/notesReducer.js","reducers/uiReducer.js","store/store.js","reducers/authReducer.js","firebase/firebase-config.js","actions/ui.js","helpers/fileUpload.js","helpers/loadNotes.js","actions/notes.js","actions/auth.js","hooks/useForm.js","components/auth/LoginScreen.js","components/auth/RegisterScreen.js","routers/AuthRouter.js","routers/PrivateRoute.js","components/notes/NotesAppBar.js","components/notes/NoteScreen.js","components/journal/NothingSelected.js","components/journal/JournalEntry.js","components/journal/JournalEntries.js","components/journal/Sidebar.js","components/journal/JournalScreen.js","routers/PublicRoute.js","routers/AppRouter.js","JournalApp.js","index.js"],"names":["types","initialState","notes","active","loading","msgError","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","auth","state","action","type","uid","payload","name","displayName","ui","map","note","id","filter","store","createStore","applyMiddleware","thunk","app","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","getFirestore","provider","GoogleAuthProvider","setError","err","finishLoading","fileUpload","file","a","formData","FormData","append","fetch","method","body","resp","ok","json","couldResp","secure_url","loadNotes","getDocs","collection","notesSnap","forEach","snapHijo","push","data","activeNote","addNewNote","startLoadingNotes","dispatch","setNotes","startSaveNote","getState","url","noteToFirestore","updateDoc","doc","Swal","fire","title","refreshNote","close","deleteNote","startLoginEmailPassword","email","password","getAuth","signInWithEmailAndPassword","then","user","login","catch","e","console","log","logout","useForm","useState","values","setValues","reset","newFormState","handleInputChange","target","value","LoginScreen","useDispatch","useSelector","formValues","handleLogin","preventDefault","className","onSubmit","placeholder","autoComplete","onChange","disabled","onClick","signInWithPopup","startGoogleLogin","src","alt","to","RegisterScreen","password2","isFormValid","trim","length","validator","isEmail","createUserWithEmailAndPassword","updateProfile","currentUser","startRegisterWithEmailPasswordName","AuthRouter","exact","path","component","PrivateRoute","isAuthenticated","Component","rest","props","NotesAppBar","style","display","files","text","fileUrl","startUploading","document","querySelector","click","NoteScreen","activeId","useRef","useEffect","current","deleteDoc","startDeleting","NothingSelected","JournalEntry","date","noteDate","moment","backgroundSize","backgroundImage","format","JournalEntries","Sidebar","signOut","startLogout","newNote","Date","getTime","addDoc","JournalScreen","PublicRoute","AppRouter","checking","setChecking","isLoggedIn","setIsLoggedIn","onAuthStateChanged","JournalApp","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.92c5442c.chunk.js","sourcesContent":["\r\n\r\nexport const types = {\r\n\r\n    login: '[Auth] Login',\r\n    logout: '[Auth] Logout',\r\n\r\n    uiSetError: '[UI] Set Error',\r\n    uiRemoveError: '[UI] Remove Error',\r\n\r\n    uiStartLoading: '[UI] Start loading',\r\n    uiFinishLoading: '[UI] Finish loading',\r\n    \r\n    notesAddNew: '[Notes] New note',\r\n    notesActive: '[Notes] Set active note',\r\n    notesLoad: '[Notes] Load notes',\r\n    notesUpdate: '[Notes] Updated note',\r\n    notesFileUrl: '[Notes] Update image',\r\n    notesDelete: '[Notes] Delete note',\r\n    notesLogoutCleaning: '[Notes] Logout Cleaning',\r\n    \r\n}","import { types } from \"../types/types\";\r\n\r\n\r\nconst initialState = {\r\n    notes: [],\r\n    active: null\r\n}\r\n\r\nexport const notesReducer = ( state= initialState , action ) => {\r\n\r\n    switch ( action.type ) {\r\n\r\n        case types.notesActive:\r\n            return {\r\n                ...state,\r\n                active: {\r\n                    ...action.payload\r\n                }\r\n            }\r\n\r\n        case types.notesAddNew:\r\n            return {\r\n                ...state,\r\n                notes: [ action.payload, ...state.notes ]\r\n            }\r\n        \r\n        case types.notesLoad:\r\n            return {\r\n                ...state,\r\n                notes: [...action.payload] \r\n            }\r\n\r\n        case types.notesUpdate:\r\n            return {\r\n                ...state,\r\n                notes: state.notes.map(\r\n                    note => note.id === action.payload.id\r\n                        ? action.payload.note\r\n                        : note\r\n                )\r\n            }\r\n    \r\n        case types.notesDelete:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: state.notes.filter( note => note.id !== action.payload )\r\n            }\r\n\r\n        case types.notesLogoutCleaning:\r\n            return {\r\n                ...state,\r\n                active: null,\r\n                notes: []\r\n            }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { types } from '../types/types';\r\n\r\nconst initialState = {\r\n    loading: false,\r\n    msgError: null\r\n}\r\n\r\nexport const uiReducer = ( state = initialState, action ) => {\r\n\r\n    switch ( action.type ) {\r\n        case types.uiSetError:\r\n            return {\r\n                ...state,\r\n                msgError: action.payload\r\n            }\r\n\r\n        case types.uiRemoveError:\r\n            return {\r\n                ...state,\r\n                msgError: null\r\n            }\r\n        \r\n        case types.uiStartLoading:\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            }\r\n        \r\n        case types.uiFinishLoading:\r\n            return {\r\n                ...state,\r\n                loading: false\r\n            }\r\n    \r\n        default: \r\n            return state;\r\n    }\r\n\r\n}","import { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nimport { authReducer } from \"../reducers/authReducer\";\r\nimport { notesReducer } from \"../reducers/notesReducer\";\r\nimport { uiReducer } from \"../reducers/uiReducer\";\r\n\r\n\r\nconst composeEnhancers = (typeof window !== 'undefined' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) || compose;\r\n\r\n\r\nconst reducers = combineReducers({\r\n    auth: authReducer,\r\n    ui: uiReducer,\r\n    notes: notesReducer\r\n})\r\n\r\nexport const store = createStore( \r\n    reducers,\r\n    composeEnhancers(\r\n        applyMiddleware( thunk )\r\n    )  \r\n);","import { types } from \"../types/types\";\r\n\r\nexport const authReducer = ( state = {}, action ) => {\r\n\r\n    switch (action.type) {\r\n        case types.login:\r\n            return {\r\n                uid: action.payload.uid,\r\n                name: action.payload.displayName,\r\n            }\r\n\r\n        case types.logout:\r\n            return { }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { initializeApp } from \"firebase/app\";\r\nimport { getFirestore, /*collection, getDocs*/ } from 'firebase/firestore/lite';\r\nimport { GoogleAuthProvider } from \"firebase/auth\";\r\n\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBEAQJuzMvrfySn7yKiHC1TF_3MRkGqRVI\",\r\n    authDomain: \"react-app-curso-53b5a.firebaseapp.com\",\r\n    projectId: \"react-app-curso-53b5a\",\r\n    storageBucket: \"react-app-curso-53b5a.appspot.com\",\r\n    messagingSenderId: \"724098372828\",\r\n    appId: \"1:724098372828:web:bf1be66e15fe03e077d019\"\r\n  };\r\n  \r\n  // Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst db = getFirestore(app);\r\nvar provider = new GoogleAuthProvider();\r\n\r\n\r\nexport {\r\n    app,\r\n    db,\r\n    provider\r\n}","import { types } from \"../types/types\"\r\n\r\n\r\nexport const setError = ( err ) => ({\r\n    type: types.uiSetError,\r\n    payload: err\r\n});\r\n\r\nexport const removeError = () => ({\r\n    type: types.uiRemoveError\r\n});\r\n\r\nexport const startLoading = () => ({\r\n    type: types.uiStartLoading\r\n});\r\n\r\nexport const finishLoading = () => ({\r\n    type: types.uiFinishLoading\r\n})","\r\n\r\nexport const fileUpload = async ( file ) => {\r\n\r\n    const cloudUrl = 'https://api.cloudinary.com/v1_1/m6nuel/image/upload';\r\n\r\n    const formData = new FormData();\r\n    formData.append( 'upload_preset', 'react-journal' );\r\n    formData.append( 'file', file );\r\n\r\n    try {\r\n        \r\n        const resp = await fetch( cloudUrl, {\r\n            method: 'POST',\r\n            body: formData\r\n        });\r\n\r\n        if( resp.ok ) {\r\n            const couldResp = await resp.json();\r\n            return couldResp.secure_url;\r\n        } else {\r\n            throw await resp.json();\r\n        }\r\n\r\n    } catch (error) {\r\n        throw error;\r\n    }\r\n\r\n}","import { collection, getDocs } from \"@firebase/firestore/lite\"\r\nimport { db } from \"../firebase/firebase-config\"\r\n\r\n\r\nexport const loadNotes = async ( uid ) => {\r\n\r\n    const notesSnap = await getDocs( collection( db, `${uid}/journal/notes` ) ) ;\r\n    const notes = [];\r\n\r\n    notesSnap.forEach( snapHijo => {\r\n        notes.push({\r\n            id:snapHijo.id,\r\n            ...snapHijo.data()\r\n        })\r\n    });\r\n    return notes;\r\n}","\r\nimport { addDoc, collection, deleteDoc, doc, updateDoc } from \"@firebase/firestore/lite\";\r\nimport Swal from \"sweetalert2\";\r\nimport { db } from \"../firebase/firebase-config\";\r\nimport { fileUpload } from \"../helpers/fileUpload\";\r\nimport { loadNotes } from \"../helpers/loadNotes\";\r\nimport { types } from \"../types/types\";\r\n\r\n\r\nexport const startNewNote = () => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n\r\n        const newNote = {\r\n            title: '',\r\n            body: '',\r\n            date: new Date().getTime()\r\n        }\r\n\r\n        const doc = await addDoc(collection( db, `${uid}/journal/notes` ), newNote);\r\n        \r\n        dispatch( activeNote( doc.id, newNote ) );\r\n        dispatch( addNewNote( doc.id, newNote ) );\r\n        \r\n    }\r\n}\r\n\r\nexport const activeNote = ( id, note ) => ({\r\n    type: types.notesActive,\r\n    payload:{\r\n        id,\r\n        ...note\r\n    }\r\n});\r\n\r\nexport const addNewNote = ( id, note ) => ({\r\n    type: types.notesAddNew,\r\n    payload: {\r\n        id, ...note\r\n    }\r\n})\r\n\r\nexport const startLoadingNotes = ( uid ) => {\r\n    return async( dispatch ) => {\r\n\r\n        const notes = await loadNotes( uid );\r\n        dispatch(  setNotes( notes ) );\r\n\r\n    }\r\n}\r\n\r\nexport const setNotes = ( notes ) => ({\r\n    type: types.notesLoad,\r\n    payload: notes\r\n});\r\n\r\nexport const startSaveNote = ( note ) => {\r\n    return async ( dispatch, getState) => {\r\n        const { uid } = getState().auth;\r\n\r\n\r\n        if ( !note.url ) {\r\n            delete note.url;\r\n        }\r\n        const noteToFirestore = { ...note };\r\n        delete noteToFirestore.id;\r\n\r\n        await updateDoc(doc( db, `${ uid }/journal/notes/${ note.id }` ), noteToFirestore);\r\n        Swal.fire(\r\n            'Saved!',\r\n            note.title,\r\n            'success'\r\n          )\r\n\r\n        // dispatch( startLoadingNotes( uid ) ) forma corta pero mal de actualizar barra lateral\r\n        dispatch( refreshNote( note.id, noteToFirestore ) );\r\n        Swal.close();\r\n    }\r\n};\r\n\r\n// react-journal\r\n\r\nexport const  refreshNote = ( id, note ) => ({\r\n    type: types.notesUpdate,\r\n    payload: {\r\n        id, \r\n        note: {\r\n            id,\r\n            ...note\r\n        }\r\n    }\r\n});\r\n\r\nexport const startUploading = ( file ) => {\r\n    return async ( dispatch, getState ) => {\r\n\r\n        const { active:activeNote } = getState().notes;\r\n\r\n        \r\n        Swal.fire({\r\n            title: 'Uploading...',\r\n            text: 'Please wait...',\r\n \r\n        });\r\n\r\n        const fileUrl = await fileUpload( file );\r\n        \r\n        activeNote.url = fileUrl;\r\n\r\n        dispatch( startSaveNote( activeNote ) );\r\n\r\n        Swal.close();\r\n    }\r\n};\r\n\r\nexport const startDeleting = ( id ) => {\r\n    return async ( dispatch, getState ) => {\r\n        const { uid } = getState().auth;\r\n    \r\n        await deleteDoc(doc( db, `${uid}/journal/notes/${ id }` ));\r\n\r\n        dispatch( deleteNote( id ) )\r\n    }\r\n};\r\n\r\nexport const deleteNote = ( id ) => ({\r\n    type: types.notesDelete,\r\n    payload: id\r\n});\r\n\r\nexport const noteLogout = () => ({\r\n    type: types.notesLogoutCleaning\r\n})\r\n\r\n\r\n","import Swal from 'sweetalert2';\r\n\r\n\r\nimport { createUserWithEmailAndPassword, getAuth,  signInWithEmailAndPassword,  signInWithPopup, signOut, updateProfile } from '@firebase/auth';\r\nimport { provider } from '../firebase/firebase-config';\r\nimport { types } from '../types/types';\r\nimport { finishLoading, startLoading } from './ui';\r\nimport { noteLogout } from './notes';\r\n\r\n\r\nexport const startLoginEmailPassword = (email, password) => {\r\n    const auth = getAuth();\r\n    return (dispatch) => {\r\n        dispatch( startLoading() );\r\n        \r\n        \r\n        signInWithEmailAndPassword( auth, email, password)\r\n            .then( ({user}) => {  \r\n                dispatch( login( user.uid, user.displayName ) )\r\n                dispatch( finishLoading() );\r\n            })\r\n            .catch( e => {\r\n                console.log( e );\r\n                dispatch( finishLoading() );\r\n                Swal.fire('Error', e, 'error')\r\n            })\r\n\r\n    }\r\n}\r\n\r\nexport const startRegisterWithEmailPasswordName = ( email, password, name ) => {\r\n    const auth = getAuth();\r\n    return ( dispatch ) => {\r\n        createUserWithEmailAndPassword( auth, email, password )\r\n            .then( async({user}) => {      \r\n                // await user.updateProfile({ displayName: name })\r\n                await updateProfile(auth.currentUser, {displayName: name})\r\n                console.log(user);\r\n                dispatch(  login(user.uid, user.displayName) )\r\n            })\r\n            .catch( e => {\r\n                console.log(e);\r\n                Swal.fire('Error', 'Error', 'error');\r\n            } )\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const startGoogleLogin = () => {\r\n\r\n    const auth = getAuth();\r\n    return ( dispatch ) => {\r\n        signInWithPopup(auth, provider)\r\n            .then(({user}) => {\r\n                dispatch(\r\n                    login(user.uid, user.displayName)\r\n                )\r\n            })\r\n        \r\n    }\r\n}\r\n\r\n\r\nexport const login = ( uid, displayName ) => ({\r\n    type: types.login,\r\n    payload: {\r\n        uid,\r\n        displayName\r\n    }\r\n});\r\n\r\n\r\nexport const startLogout = () => {\r\n\r\n    const auth = getAuth();\r\n    return async( dispatch ) => {\r\n        await signOut(auth);   \r\n\r\n        dispatch( logout() );\r\n        dispatch( noteLogout() );\r\n    }\r\n}\r\n\r\nexport const logout = () => ({\r\n    type: types.logout\r\n})","import { useState } from \"react\"\r\n\r\nexport const useForm = ( initialState = {} ) => {\r\n\r\n    const [values, setValues] = useState(initialState);\r\n\r\n    const reset = ( newFormState = initialState ) => {\r\n        setValues( newFormState );\r\n    }\r\n    \r\n    const handleInputChange = ({ target }) => {\r\n\r\n        setValues({\r\n            ...values,\r\n            [ target.name ]: target.value\r\n        });\r\n\r\n    }\r\n\r\n    return [ values, handleInputChange, reset ]\r\n\r\n}","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport { startGoogleLogin, startLoginEmailPassword } from '../../actions/auth';\r\nimport { useForm } from '../../hooks/useForm';\r\n\r\n\r\n\r\nexport const LoginScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { loading } = useSelector(state => state.ui)\r\n\r\n    const [ formValues, handleInputChange ] = useForm({\r\n        email: 'jesus@gmail.com',\r\n        password: '123456'\r\n    });\r\n\r\n    const { email, password } = formValues;\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch( startLoginEmailPassword(email, password) );\r\n    }\r\n\r\n    const handleGoogleLogin = () => {\r\n        dispatch( startGoogleLogin() );\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Login</h3>\r\n\r\n            <form \r\n                onSubmit={ handleLogin } \r\n                className=\"animate__animated animate__fadeIn\"\r\n            >\r\n                \r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block\"\r\n                    disabled={ loading }\r\n                    onClick={ handleLogin }\r\n                >\r\n                    Login\r\n                </button>\r\n\r\n                <hr/>\r\n                \r\n                <div className=\"auth__social-networks\">\r\n                    <p>Login with social networks</p>\r\n                    \r\n                    <div \r\n                        className=\"google-btn\"\r\n                        onClick= { handleGoogleLogin }\r\n                    >\r\n                        <div className=\"google-icon-wrapper\">\r\n                            <img className=\"google-icon\" src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\" alt=\"google button\" />\r\n                        </div>\r\n                        <p className=\"btn-text\">\r\n                            <b>Sign in with google</b>\r\n                        </p>\r\n                    </div>\r\n                </div>\r\n\r\n                <Link \r\n                    to=\"/auth/register\"\r\n                    className=\"link\"\r\n                >\r\n                    Create new account\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport validator from 'validator';\r\nimport { removeError, setError } from '../../actions/ui';\r\nimport { startRegisterWithEmailPasswordName } from '../../actions/auth';\r\n\r\n\r\nexport const RegisterScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { msgError } = useSelector( state => state.ui );\r\n\r\n \r\n\r\n    const initialForm = {\r\n        name: '',\r\n        email:'',\r\n        password: '',\r\n        password2: ''\r\n    }\r\n    const [ formValues, handleInputChange ] = useForm( initialForm );\r\n\r\n    const { name, email, password, password2 } = formValues;\r\n\r\n    const handleRegister = (e) => {\r\n        e.preventDefault();\r\n\r\n        if ( isFormValid() ) {\r\n            dispatch( startRegisterWithEmailPasswordName( email, password, name ) )\r\n        }\r\n    } \r\n\r\n\r\n    const isFormValid = () => {\r\n\r\n        if ( name.trim().length === 0 ) {\r\n            dispatch( setError( 'Name is required' ) );\r\n            return false;\r\n        } else if ( !validator.isEmail( email ) ) {\r\n            dispatch( setError( 'Email is not Valid' ) );\r\n            return false;\r\n        } else if ( password !== password2 || password.length < 5 ) {\r\n            dispatch( setError( 'Password should be at least 6 characters and match each other' ) );\r\n            return false;\r\n        }\r\n\r\n        dispatch( removeError() );\r\n        return true\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"auth__title\">Register</h3>\r\n\r\n            <form \r\n                onSubmit= { handleRegister }\r\n                className=\"animate__animated animate__fadeIn\"\r\n            >\r\n\r\n            \r\n                {\r\n                    msgError &&\r\n                    (\r\n                    <div className=\"auth__alert-error\">\r\n                        { msgError }\r\n                    </div>\r\n                    )\r\n                }\r\n\r\n            <input \r\n                    type=\"text\"\r\n                    placeholder=\"Name\"\r\n                    name=\"name\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ name }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Email\"\r\n                    name=\"email\"\r\n                    className=\"auth__input\"\r\n                    autoComplete=\"off\"\r\n                    value={ email }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Password\"\r\n                    name=\"password\"\r\n                    className=\"auth__input\"\r\n                    value={ password }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <input \r\n                    type=\"password\"\r\n                    placeholder=\"Confirm Password\"\r\n                    name=\"password2\"\r\n                    className=\"auth__input\"\r\n                    value={ password2 }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-primary btn-block mb-5\"\r\n                    // disabled={true}\r\n                    // onClick={ handleRegister }\r\n                >\r\n                    Register\r\n                </button>\r\n\r\n\r\n                <Link \r\n                    to=\"/auth/login\"\r\n                    className=\"link\"\r\n                >\r\n                    Already Register?\r\n                </Link>\r\n\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Route, Redirect, Switch } from 'react-router-dom';\r\n\r\n\r\nimport { LoginScreen } from '../components/auth/LoginScreen';\r\nimport { RegisterScreen } from '../components/auth/RegisterScreen';\r\n\r\nexport const AuthRouter = () => {\r\n    return (\r\n        <div className=\"auth__main\">\r\n            <div className=\"auth__box-container\">\r\n                <Switch>\r\n                    <Route\r\n                        exact\r\n                        path=\"/auth/login\"\r\n                        component={ LoginScreen } \r\n                    />\r\n                    \r\n                    <Route \r\n                        exact\r\n                        path=\"/auth/register\"\r\n                        component={ RegisterScreen }\r\n                    />\r\n    \r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PrivateRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n\r\n    return (\r\n        <Route { ...rest }\r\n            component = { (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Component { ...props } /> )\r\n                    : ( <Redirect to=\"/auth/login\" /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPrivateRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startSaveNote, startUploading } from '../../actions/notes';\r\n\r\nexport const NotesAppBar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active } = useSelector(state => state.notes)\r\n\r\n    const handleSave = () => {\r\n        dispatch( startSaveNote( active ) )\r\n    }\r\n\r\n    const handlePicture = () => {\r\n        document.querySelector('#fileSelector').click();\r\n    }\r\n\r\n    const handleFileChange = (e) => {\r\n        const file = e.target.files[0];\r\n        if ( file ) {\r\n            dispatch( startUploading( file ) )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"notes__appbar\">\r\n            <span>28 de agosto 2020</span>\r\n\r\n            <input \r\n                type =\"file\"\r\n                name=\"file\"\r\n                id=\"fileSelector\"\r\n                style = {{ display: 'none' }}\r\n                onChange= { handleFileChange }\r\n            />\r\n\r\n            <div>\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick= { handlePicture }\r\n                >\r\n                    Picture\r\n                </button>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleSave }\r\n                >\r\n                    Save\r\n                </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useRef } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { activeNote, startDeleting } from '../../actions/notes';\r\n\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { NotesAppBar } from './NotesAppBar'\r\n\r\nexport const NoteScreen = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { active:note } = useSelector(state => state.notes);\r\n    const [ formValues, handleInputChange, reset ] = useForm( note );\r\n    const { body, title, id } = formValues;\r\n\r\n    const activeId = useRef( note.id );\r\n\r\n    useEffect(() => { // para mostrar los cambios en la pantalla de edicion\r\n\r\n        if( note.id !== activeId.current ) {\r\n            reset( note );\r\n            activeId.current = note.id\r\n        }\r\n\r\n    }, [ note, reset ]);\r\n\r\n    useEffect(() => { \r\n        dispatch( activeNote( formValues.id, { ...formValues } ) )\r\n    }, [ formValues, dispatch ])\r\n\r\n    const handleDelete = () => {\r\n    \r\n        dispatch( startDeleting( id ) )\r\n    } \r\n\r\n    return (\r\n        <div className=\"notes__main-content\">\r\n\r\n            <NotesAppBar />\r\n\r\n            <div className=\"notes__content\">\r\n\r\n                <input \r\n                    type=\"text\"\r\n                    placeholder=\"Some awesome title\"\r\n                    className=\"notes__title-input\"\r\n                    autoComplete=\"off\"\r\n                    name=\"title\"\r\n                    value={ title }\r\n                    onChange={ handleInputChange }\r\n                />\r\n\r\n                <textarea\r\n                    placeholder=\"what happend today\"\r\n                    className=\"notes__textarea\"\r\n                    name=\"body\"\r\n                    value={ body }\r\n                    onChange={ handleInputChange }\r\n                > \r\n                </textarea>\r\n\r\n                {\r\n                    (note.url) \r\n                    &&  (<div className=\"notes__image\">\r\n                            <img \r\n                                src={ note.url }\r\n                                alt=\"DBZ\"\r\n                            />\r\n                    </div>\r\n                    )\r\n                }\r\n\r\n            </div>\r\n\r\n            <button\r\n                className=\"btn btn-danger\"\r\n                onClick={ handleDelete }\r\n            >\r\n                Delete\r\n            </button>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const NothingSelected = () => {\r\n    return (\r\n        <div className=\"nothing__main-content\">\r\n            <p>\r\n                select something\r\n                <br/>\r\n                pr create an entry!\r\n            </p>\r\n\r\n            <i className=\"far fa-star fa-5x mt-5\"></i>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport moment from 'moment';\r\nimport { activeNote } from '../../actions/notes';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n\r\n\r\nexport const JournalEntry = ({ id, date, title, body, url }) => {\r\n\r\n    const noteDate = moment(date);\r\n    const dispatch = useDispatch();\r\n    \r\n    const handleEntryClick = () => {\r\n        dispatch( activeNote(id,{date, title, body, url}) )\r\n    }\r\n\r\n\r\n    return (\r\n        <div \r\n            className=\"journal__entry animate__animated animate__fadeIn\"\r\n            onClick={ handleEntryClick }    \r\n        >\r\n            \r\n        {\r\n            url &&           \r\n            <div\r\n                className=\"journal__entry-picture animate__animated animate__fadeIn\"\r\n                style={{\r\n                    backgroundSize: 'cover',\r\n                    backgroundImage: `url(${url})`\r\n                }}\r\n            ></div>\r\n        }\r\n\r\n            <div className=\"journal__entry-body animate__animated animate__fadeIn\">\r\n                <p className=\"journal__entry-tittle\">\r\n                    { title }\r\n                </p>\r\n                <p className=\"journal__entry-content\">\r\n                    { body }\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"journal__entry-date-box animate__animated animate__fadeIn\">\r\n                <span> { noteDate.format('dddd') } </span>\r\n                <h4>{ noteDate.format('Do') }</h4>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\nimport { JournalEntry } from './JournalEntry'\r\n\r\nexport const JournalEntries = () => {\r\n\r\n    const { notes } = useSelector(state => state.notes);\r\n\r\n\r\n    return (\r\n        <div className=\"journal__entries animate__animated animate__fadeIn\">\r\n\r\n            {\r\n                notes.map( note => (\r\n                    <JournalEntry\r\n                        key={ note.id }\r\n                        { ...note }\r\n                    />\r\n                ))\r\n            }\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { startLogout } from '../../actions/auth';\r\nimport { startNewNote } from '../../actions/notes';\r\nimport { JournalEntries } from './JournalEntries'\r\n\r\nexport const Sidebar = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const { name } = useSelector(state => state.auth);\r\n\r\n    const handleLogout = () => {\r\n        dispatch( startLogout() )\r\n\r\n    }\r\n\r\n    const handleAddNew = () => {\r\n        dispatch( startNewNote() );\r\n    }\r\n\r\n    return (\r\n        <aside className=\"journal__sidebar animate__animated animate__fadeIn\">\r\n            \r\n            <div className=\"journal__sidebar-navbar\">\r\n                \r\n                <h3 className=\"mt-5\">                    \r\n                    <i className=\"far fa-moon\"></i>\r\n                    <span> { name } </span>\r\n                \r\n                \r\n                </h3>\r\n\r\n                <button \r\n                    className=\"btn\"\r\n                    onClick={ handleLogout }    \r\n                >\r\n                    Logout\r\n                </button>\r\n\r\n            </div>\r\n\r\n            <div\r\n                className=\"journal__new-entry\"\r\n                onClick={ handleAddNew }\r\n            >\r\n                    <i className=\"far fa-calendar-plus fa-5x\"></i>\r\n                    <p className=\"mt-5\">\r\n                        New Entry\r\n                    </p>\r\n            </div>\r\n\r\n            <JournalEntries />\r\n\r\n        </aside>\r\n    )   \r\n}\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { NoteScreen } from '../notes/NoteScreen';\r\nimport { NothingSelected } from './NothingSelected';\r\nimport { Sidebar } from './Sidebar';\r\n\r\n\r\nexport const JournalScreen = () => {\r\n\r\n    const { active } = useSelector(state => state.notes)\r\n    \r\n    return (\r\n        <div className=\"journal__main-content animate__animated animate__fadeIn\">\r\n            <Sidebar />\r\n\r\n            <main>\r\n\r\n                {\r\n                    ( active )\r\n                    ? ( <NoteScreen /> )\r\n                    : ( <NothingSelected /> )\r\n                }\r\n         \r\n            </main>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Redirect, Route } from 'react-router-dom';\r\n\r\nexport const PublicRoute = ({\r\n    isAuthenticated,\r\n    component: Component,\r\n    ...rest\r\n}) => {\r\n    \r\n    return (\r\n        <Route { ...rest }\r\n            component = { (props) => (\r\n                ( isAuthenticated )\r\n                    ? ( <Redirect to=\"/\" /> )\r\n                    : ( <Component { ...props } /> )\r\n            )}\r\n\r\n        />\r\n    )\r\n}\r\n\r\nPublicRoute.propTypes = {\r\n    isAuthenticated: PropTypes.bool.isRequired,\r\n    component: PropTypes.func.isRequired\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Redirect\r\n  } from \"react-router-dom\";\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { getAuth, onAuthStateChanged } from '@firebase/auth';\r\n\r\nimport { AuthRouter } from './AuthRouter';\r\nimport { PrivateRoute } from './PrivateRoute';\r\n\r\nimport { JournalScreen } from '../components/journal/JournalScreen';\r\nimport { login } from '../actions/auth';\r\nimport { PublicRoute } from './PublicRoute';\r\nimport { startLoadingNotes } from '../actions/notes';\r\n\r\n\r\nexport const AppRouter = () => {\r\n\r\n    const dispatch = useDispatch(); \r\n    const [ checking, setChecking ] = useState( true );\r\n    const [ isLoggedIn, setIsLoggedIn ] = useState( false );\r\n\r\n    useEffect(() => { \r\n\r\n        const auth = getAuth();\r\n        \r\n        onAuthStateChanged( auth, async (user) =>{ //mantiene la session activa incluso despues de recargar\r\n        \r\n            if( user ) {\r\n                dispatch( login( user.uid, user.displayName ) );\r\n                setIsLoggedIn( true );\r\n\r\n                dispatch(  startLoadingNotes( user.uid ) );\r\n\r\n            } else {\r\n                setIsLoggedIn( false )\r\n            }\r\n            setChecking( false );\r\n        \r\n        })\r\n\r\n    }, [ dispatch, setChecking, isLoggedIn ]);\r\n\r\n    if( checking ) {\r\n        return (\r\n            <h1>wait...</h1>\r\n        )\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <Router>\r\n            <div>\r\n                <Switch>\r\n                    <PublicRoute \r\n                        path=\"/auth\"\r\n                        component={ AuthRouter }\r\n                        isAuthenticated={ isLoggedIn }\r\n                    />\r\n\r\n                    <PrivateRoute\r\n                        exact\r\n                        isAuthenticated={ isLoggedIn }\r\n                        path=\"/\"\r\n                        component={ JournalScreen }\r\n                    />\r\n\r\n                    <Redirect to=\"/auth/login\" />\r\n                </Switch>\r\n            </div>\r\n        </Router>\r\n       \r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './store/store';\r\n\r\nimport { AppRouter } from './routers/AppRouter'\r\n\r\nexport const JournalApp = () => {\r\n    return (\r\n        <Provider store={ store }>\r\n            <AppRouter />\r\n        </Provider>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { JournalApp } from './JournalApp';\nimport './firebase/firebase-config';\nimport './styles/styles.scss';\n\nReactDOM.render(\n\n    <JournalApp />,\n\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}